apiVersion: v1
kind: Service
metadata:
  name: "{{ .Values.name }}"
  labels:
    app: "{{ .Values.name }}"
spec:
  ports:
  - port: {{ .Values.redis_stack_server.port }}
    name: db
  type: NodePort
  selector:
    app: "{{ .Values.name }}"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Values.name }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Values.name }}" 
  serviceName: "{{ .Values.name }}"
  replicas: {{ .Values.redis_stack_server.replicas }}
  template:
    metadata:
      labels:
        app: "{{ .Values.name }}" 
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: "{{ .Values.name }}"
        image: {{ .Values.redis_stack_server.image }}:{{ .Values.redis_stack_server.tag }}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.redis_stack_server.port }}
          name: db
        volumeMounts:
        - name: db
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: db
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.redis_stack_server.storage_class }}
      resources:
        requests:
          storage: {{ .Values.redis_stack_server.storage }}
