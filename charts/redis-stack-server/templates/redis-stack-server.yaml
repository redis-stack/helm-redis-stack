apiVersion: v1
kind: Service
metadata:
  name: "{{ .Values.name }}"
  namespace: {{ .Release.Namespace }}
  labels:
    app: "{{ .Values.name }}"
spec:
  ports:
  - port: {{ .Values.redis_stack_server.port }}
    name: db
  type: {{ .Values.redis_stack_server.serviceType }}
  selector:
    app: "{{ .Values.name }}"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Values.name }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Values.name }}" 
  serviceName: "{{ .Values.name }}"
  replicas: {{ .Values.redis_stack_server.replicas }}
  template:
    metadata:
      labels:
        app: "{{ .Values.name }}" 
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: "{{ .Values.name }}"
        image: {{ .Values.redis_stack_server.image }}:{{ .Values.redis_stack_server.tag }}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.redis_stack_server.port }}
          name: db
        volumeMounts:
        - name: db
          mountPath: /data
        {{- with .Values.redis_stack_server.env }}
        env:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.redis_stack_server.resources }}
        resources:
        {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- with .Values.redis_stack_server.nodeSelector }}
      nodeSelector:
        {{ range $key, $value := . }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
      {{- with .Values.redis_stack_server.tolerations }}
      tolerations:
      {{- toYaml . | nindent 6 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: db
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.redis_stack_server.storage_class }}
      resources:
        requests:
          storage: {{ .Values.redis_stack_server.storage }}